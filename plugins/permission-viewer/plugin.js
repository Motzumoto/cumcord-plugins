(function(M,C,e,a,g){"use strict";const B=[];var u={patch:l=>l&&B.push(l),unpatchAll:()=>B.forEach(async l=>await l()),lazyPatchContextMenu:async(l,t)=>{const o=s=>s.default&&s.default.displayName===l,c=a.find(o);if(c)t(c);else{const s=a.findByProps("openContextMenuLazy");let n=M.before("openContextMenuLazy",s,r=>{const i=r[1];return r[1]=async()=>{const d=await i(r[0]);return I=>{const T=d(I);return T?.type?.displayName===l&&t&&(n(),t(a.find(o)),t=!1),T}},r})}}};/**
* NOTICE OF LICENSE
*
* This source file is subject to the GNU General Public License (GPL-3.0).
* You can find more information in the LICENSE.md file.
* More information is also avaliable at this URL:
* https://opensource.org/licenses/GPL-3.0
*
*
* @copyright Copyright (c) 2022 Paige Jordan
* @license   GPL-3.0 GNU General Public License v3.0
* @link      https://github.com/swishs-client-mod-plugins/cumcord-plugins/tree/main/plugins/permission-viewer
*/const h=a.findByDisplayName("Flex"),P=a.findByDisplayName("Text"),f=a.findByDisplayName("TabBar"),A=a.findByDisplayName("Close"),D=a.findByDisplayName("Checkmark"),E=a.findByProps("ModalCloseButton"),{Permissions:y}=e.constants,R={TabBar:a.findByProps("tabBarContainer"),ReactionModal:a.findByProps("spinnerMore"),RoleMenu:a.findByProps("roleDot","sidebar")};var m=({event:l,roles:t={},permissions:o})=>{const[c,s]=e.React.useState(Object.keys(t)[0]);return e.React.createElement(E.ModalRoot,{transitionState:l.transitionState,className:R.ReactionModal.container,size:"large"},e.React.createElement(g.ErrorBoundary,null,o||e.React.createElement(E.ModalContent,null,e.React.createElement(f,{selectedItem:c,type:f.Types.SIDE,onItemSelect:s},Object.keys(t).map(n=>e.React.createElement(f.Item,{id:t[n].id,className:R.RoleMenu.row,itemType:f.Types.SIDE},e.React.createElement("div",{className:R.RoleMenu.roleDot,style:{backgroundColor:t[n].colorString||"#99aab5"}}),e.React.createElement(P,{className:R.RoleMenu.roleName},t[n].name))))),e.React.createElement(E.ModalContent,null,Object.keys(y).map(n=>{const r=c?t[c].permissions:o,i=t?.[c]?.permissionsDeny,d=(r&y.ADMINISTRATOR)===y.ADMINISTRATOR;return e.React.createElement(h,{style:{paddingLeft:"12px",paddingRight:"264px"},align:h.Align.CENTER,className:R.ReactionModal.reactorDefault},e.React.createElement(h.Child,{grow:0,shrink:0},(r&y[n])===y[n]&&(i?(i&y[n])!==y[n]:!0)||d?e.React.createElement(D,{height:24,width:24,color:"#43B581"}):e.React.createElement(A,{height:24,width:24,color:"#F04747"})),e.React.createElement(h.Child,null,e.React.createElement(P,null,n.charAt(0).toUpperCase()+n.slice(1).toLowerCase().replace(/_\w/g,I=>" "+I.toUpperCase().slice(1)))))}))))};/**
* NOTICE OF LICENSE
*
* This source file is subject to the GNU General Public License (GPL-3.0).
* You can find more information in the LICENSE.md file.
* More information is also avaliable at this URL:
* https://opensource.org/licenses/GPL-3.0
*
*
* @copyright Copyright (c) 2022 Paige Jordan
* @license   GPL-3.0 GNU General Public License v3.0
* @link      https://github.com/swishs-client-mod-plugins/cumcord-plugins/tree/main/plugins/permission-viewer
*/const p=a.findByProps("MenuGroup","MenuItem"),{Permissions:N}=e.constants,{getGuild:O}=a.findByProps("getGuild"),{getMember:z}=a.findByProps("getMember"),{openModal:x}=a.findByProps("openModal","openModalLazy"),S=()=>{u.lazyPatchContextMenu("GuildContextMenu",l=>{u.patch(M.after("default",l,([t],o)=>{C.findInReactTree(o,s=>Array.isArray(s.children))?.children?.splice(1,0,e.React.createElement(e.React.Fragment,null,e.React.createElement(p.MenuSeparator,null),e.React.createElement(p.MenuItem,{label:"View Permissions",id:"permissions",action:()=>{x(s=>e.React.createElement(m,{event:s,roles:t.guild.roles}))}})))}))})},v=()=>{u.lazyPatchContextMenu("GuildChannelUserContextMenu",l=>{u.patch(M.after("default",l,([t],o)=>{const c=C.findInReactTree(o,i=>Array.isArray(i.children))?.children,s=O(t.guildId),n=z(t.guildId,t.user.id),r=s.ownerId===t.user.id?Object.values(N).reduce((i,d)=>i|d,0n):Object.values(s.roles).reduce((i,d)=>~n.roles.indexOf(d.id)?i|d.permissions:i,0n|s.roles[t.guildId].permissions);c?.splice(2,0,e.React.createElement(e.React.Fragment,null,e.React.createElement(p.MenuSeparator,null),e.React.createElement(p.MenuItem,{label:"View Permissions",id:"permissions",action:()=>{x(i=>e.React.createElement(m,{event:i,permissions:r}))}})))}))})},L=()=>{u.lazyPatchContextMenu("ChannelListTextChannelContextMenu",l=>{u.patch(M.after("default",l,([t],o)=>{const c=C.findInReactTree(o,n=>Array.isArray(n.children))?.children,s=Object.values(t.guild.roles).map(n=>{if(!~Object.keys(t.channel.permissionOverwrites).indexOf(n.id))return;const r={...n};return r.permissions|=t.channel.permissionOverwrites[n.id].allow,r.permissionsDeny=t.channel.permissionOverwrites[n.id].deny,r}).filter(Boolean).reduce((n,r)=>Object.assign(n,{[r.id]:r}),{});c?.splice(1,0,e.React.createElement(e.React.Fragment,null,e.React.createElement(p.MenuSeparator,null),e.React.createElement(p.MenuItem,{label:"View Permissions",id:"permissions",action:()=>{x(n=>e.React.createElement(m,{event:n,roles:s}))}})))}))})};var b=()=>({onLoad(){S(),v(),L()},onUnload(){u.unpatchAll()}});return b})(cumcord.patcher,cumcord.utils,cumcord.modules.common,cumcord.modules.webpack,cumcord.ui.components);
